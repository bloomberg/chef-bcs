#
# Copyright 2017, Bloomberg Finance L.P.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

router id <%= @interface_ip %>;

listen bgp address <%= @interface_ip %>;

log "/var/log/bird.log" all;
log syslog all;

# Watch interface up/down events.
protocol device {
  scan time 2;    # Scan interfaces every 2 seconds
}

protocol static static_vips {
  route <%= node['chef-bcs']['adc']['vip']['prefix'] %>:<%= node['chef-bcs']['adc']['vip']['netmask'] %> via <%= @interface_ip %>;
}

<% node['chef-bcs']['adc']['bgp']['peers'].each do |peer| %>
protocol bgp <%= peer['name'] %> {
  import none;
  description "<%= peer['label'] %>";
  multihop;
  next hop self;
  graceful restart;
  export where proto = "static_vips";
  local as <%= node['chef-bcs']['adc']['bgp']['asn'] %>;
  neighbor <%= peer['ip'] %> as <%= node['chef-bcs']['adc']['bgp']['asn'] %>;
  <% if @is_adc_node_secondary %>
  #export filter {
  #  if (net = <%= node['chef-bcs']['adc']['vip']['prefix'] %>/<%= node['chef-bcs']['adc']['vip']['cidr'] %>) then {
  #    bgp_path.prepend(<%= node['chef-bcs']['adc']['bgp']['asn'] %>);
  #    accept;
  #  }
  #  else reject;
  #};

  export filter {
    bgp_path.prepend(<%= node['chef-bcs']['adc']['bgp']['asn'] %>);
    accept;
 };
  <% end %>
}

<% end %>
